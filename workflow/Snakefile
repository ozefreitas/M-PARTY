configfile: "config/config.yaml"

from scripts.mparty_util import get_target_db, get_clusters, threshold2clusters, clusters_in_list, get_UPI_queryDB, build_UPI_query_DB
from glob import glob


db_name = get_target_db(config)
upi_db = get_UPI_queryDB(config)


print(f'Databases name\'s set to {db_name}. New folders will be created with this name.\n')
if upi_db == "uniprot" or upi_db == "swissprot":
	print(f'UPIMAPI query database set to {upi_db}. Download will start shortly.\n')
else:
	print(f'UPIMAPI query database set to {upi_db}')


rule all:
	input:
		expand("resources/Data/HMMs/{db}/After_tcoffee_UPI/{threshold}.hmm", db=db_name, threshold=config["thresholds"])


rule t_coffee:
	input:
		"resources/Data/FASTA/{db}/CDHIT/{threshold}/{cluster}.fasta"
	output:
		"resources/Alignments/{db}/MultipleSequencesAlign/T_Coffee_UPI/{threshold}/{cluster}.clustal_aln"
	threads: config["threads"]
	log:
		"logs/{db}_t_coffee_{threshold}_{cluster}.log"
	shell:
		"t_coffee {input} -output clustalw_aln -outfile {output} -type PROTEIN -n_core 4"


rule hmmbuild:
	input:
		"resources/Alignments/{db}/MultipleSequencesAlign/T_Coffee_UPI/{threshold}/{cluster}.clustal_aln"
	output:
		"resources/Data/HMMs/{db}/After_tcoffee_UPI/{threshold}/{cluster}.hmm"
	threads: config["threads"]
	log:
		"logs/{db}_hmmbuild_{threshold}_{cluster}.log"
	shell:
		"hmmbuild {output} {input}"


rule cat_hmms:
	input:
	    ["resources/Data/HMMs/{db}/After_tcoffee_UPI/{threshold}/{cluster}.hmm".format(db=db_name, threshold=config["thresholds"][x], 
		cluster=config[config["thresholds"][x]][y]) for x in range(len(config["thresholds"])) for y in range(len(config[config["thresholds"][x]]))]
	output:
		"resources/Data/HMMs/{db}/After_tcoffee_UPI/{threshold}.hmm"
	threads: config["threads"]
	log:
		"logs/{db}_cat_hmms_{threshold}.log"
	shell:
		"cat {input} > {output}"