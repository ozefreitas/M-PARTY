name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          tags: plastedma:latest
          outputs: type=docker, dest=/tmp/plastedma.tar

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: plastedma
          path: /tmp/plastedma.tar

  annotation:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: plastedma
          path: /tmp

      - name: Load Docker image
        run: |
          docker load --input /tmp/plastedma.tar
          docker image ls -a

      - name: Check base entrypoint
        run: docker run plastedma bin/bash -c "ls"

      - name: Print PlastEDMA's main script
        run: docker run plastedma bin/bash -c "plastedma.py -h"

      - name: Annotation workflow by FASTA input, report text creation and excel table format
        run: docker run plastedma bin/bash -c "plastedma.py -i PlastEDMA/ci/sequences.fasta -o output_results -rt --output_type excel --hmm_db_name PE"

      - name: Annotation workflow with gut metagenome proteins (negative dataset), generate same outputs
        run: docker run plastedma bin/bash -c "plastedma.py -i PlastEDMA/ci/gut_metagenome_proteins.fasta -it metagenome -o output_results -rt --output_type excel --hmm_db_name PE"

      - name: Annotation workflow with gut metagenome proteins (negative dataset), generate config file
        run: docker run plastedma bin/bash -c "plastedma.py -i PlastEDMA/ci/gut_metagenome_proteins.fasta -it metagenome -o output_results -rt --output_type excel --hmm_db_name PE --display_config"

  validation:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: plastedma
          path: /tmp

      - name: Load Docker image
        run: |
          docker load --input /tmp/plastedma.tar
          docker image ls -a

      - name: Check base entrypoint
        run: docker run plastedma bin/bash -c "ls"

      - name: Print PlastEDMA's main script
        run: docker run plastedma bin/bash -c "plastedma.py -h"

      - name: Validation workflow alone
        run: docker run plastedma bin/bash -c "plastedma.py --validation --hmm_db_name PE"

  annotation_validation:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: plastedma
          path: /tmp

      - name: Load Docker image
        run: |
          docker load --input /tmp/plastedma.tar
          docker image ls -a

      - name: Check base entrypoint
        run: docker run plastedma bin/bash -c "ls"

      - name: Print PlastEDMA's main script
        run: docker run plastedma bin/bash -c "plastedma.py -h"
      
      - name: Annotation workflow with gut metagenome proteins (negative dataset), add model validation script
        run: docker run plastedma bin/bash -c "plastedma.py -i PlastEDMA/ci/gut_metagenome_proteins.fasta -it metagenome -o output_results -rt --output_type excel --validation --hmm_db_name PE"

  annotation_validation_swapdb:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: plastedma
          path: /tmp

      - name: Load Docker image
        run: |
          docker load --input /tmp/plastedma.tar
          docker image ls -a

      - name: Check base entrypoint
        run: docker run plastedma bin/bash -c "ls"

      - name: Print PlastEDMA's main script
        run: docker run plastedma bin/bash -c "plastedma.py -h"

      - name: Annotation workflow with gut metagenome proteins (negative dataset), add model validation workflow with POLYMERASE as CONTROL
        run: docker run plastedma bin/bash -c "plastedma.py -i PlastEDMA/ci/gut_metagenome_proteins.fasta -it metagenome -o output_results -rt --output_type excel --validation --hmm_db_name PE --negative_db PlastEDMA/ci/polymerase_DB.fasta"

  # db_construction:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v1

  #     - name: Download artifact
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: plastedma
  #         path: /tmp

  #     - name: Load Docker image
  #       run: |
  #         docker load --input /tmp/plastedma.tar
  #         docker image ls -a

  #     - name: Check base entrypoint
  #       run: docker run plastedma bin/bash -c "ls"

  #     - name: Print PlastEDMA's main script
  #       run: docker run plastedma bin/bash -c "plastedma.py -h"

      # - name: Database construction workflow with small FASTA protein file, WITHOUT model validation script
      #   run: docker run plastedma bin/bash -c "plastedma.py -w database_construction -i PlastEDMA/ci/sequences.fasta"
      
      # - name: Database construction workflow with small FASTA protein file, WITH model validation script
      #   run: docker run plastedma bin/bash -c "plastedma.py -w database_construction -i PlastEDMA/ci/sequences.fasta --validation"
      
      # - name: Full PlastEDMA workflow execution!
      #   run: docker run plastedma bin/bash -c "plastedma.py -w both -i PlastEDMA/ci/sequences.fasta -o output_results -rt --output_type excel --validation"
      